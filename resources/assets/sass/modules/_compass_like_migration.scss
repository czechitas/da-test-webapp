@use 'sass:string';
@use 'sass:map';

$font-path: '../fonts/';
$image-path: '../img/';
// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: '') {
    $index: string.index($string, $search);

    @if $index {
        // stylelint-disable-next-line max-line-length
        @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
    }

    @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
    $src: null;
    $src-eot: null;

    $extmods: (
        eot: '?#iefix',
        svg: '#' + str-replace($name, ' ', '_')
    );

    $formats: (
        otf: 'opentype',
        ttf: 'truetype',
        eot: 'embedded-opentype'
    );

    @each $ext in $exts {
        $extmod: if(map.has-key($extmods, $ext), $ext + map.get($extmods, $ext), $ext);
        $format: if(map.has-key($formats, $ext), map.get($formats, $ext), $ext);

        @if $ext == 'eot' {
            // stylelint-disable-next-line function-url-quotes
            $src-eot: list.append($src-eot, url(string.quote($font-path + $path + ".eot")) );
        }
        // stylelint-disable-next-line function-url-quotes
        $src: list.append($src, url(string.quote($font-path + $path + "." + $extmod)) format(string.quote($format)), comma);
    }

    @font-face {
        font-family: string.quote($name);
        font-style: $style;
        font-weight: $weight;
        src: $src-eot;
        src: $src;
    }
}

@function image-url($path) {
    @return url(string.quote($image-path + $path)); // stylelint-disable-line function-url-quotes
}

@function inline-image($path) {
    @return inline(string.quote($path));
}
